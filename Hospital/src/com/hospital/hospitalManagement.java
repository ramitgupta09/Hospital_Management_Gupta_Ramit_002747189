/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.hospital;

import com.classes.PatientDirectory;
import com.classes.DoctorDirectory;
import com.classes.DoctorPerson;
import com.classes.Encounter;
import com.classes.EncounterHistory;
import com.classes.Hospital;
import com.classes.HospitalAdmin;
import com.classes.HospitalAdminDirectory;
import com.classes.HospitalDirectory;
import com.classes.Patient;
import com.classes.Person;
import com.classes.SystemAdmin;
import com.classes.SystemAdminDirectory;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.LookAndFeel;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dotaw
 */
public class hospitalManagement extends javax.swing.JFrame {
    DefaultTableModel model;
    String genderString = "Unknown";
    PatientDirectory dir = new PatientDirectory();
    DoctorDirectory docDir = new DoctorDirectory();
    EncounterHistory encHistory = new EncounterHistory();
    SystemAdminDirectory sysAdminDir = new SystemAdminDirectory();
    Encounter encToWorkWith = new Encounter();
    HospitalDirectory hospDir = new HospitalDirectory();
    HospitalAdminDirectory hospAdminDIr = new HospitalAdminDirectory();
    

    /**
     * Creates new form hospitalManagement
     */
    public hospitalManagement() {
        
        try{
            for (LookAndFeelInfo info: UIManager.getInstalledLookAndFeels()){
                if ("Nimbus".equals(info.getName())){
                    UIManager.setLookAndFeel((info.getClassName()));
                    break;
                }
            }
        }catch (Exception e) {
            //If something went wrong.
        }
        
        
        initComponents();
        medicalLicenseNumberTextField.setEnabled(false);
        mlnTextFieldSysAdmin.setEnabled(false);
        userName.setEnabled(false);
        encounterID.setEnabled(false);
        patientAgeFieldVitalSignsRecording.setEnabled(false);
        bloodGroupFieldVitalSignsRecording.setEnabled(false);
        jTextArea4.setEnabled(false);
        
        lbLogo.setIcon(new ImageIcon("C:\\AED_Assignments\\Hospital_Management_Gupta_Ramit_002747189\\Hospital\\src\\com\\hospital\\hospitalLogo.png"));
        validate();
        populatePatientTable();
        populateDoctorTable();
    }
    
    public void PanelPaint(JPanel page){
        Parent.removeAll();
        Parent.add(page);
        Parent.repaint();
        Parent.revalidate();
    }
    
    public void SplitPanelPaint(JPanel page){
        RightComponent.removeAll();
        RightComponent.add(page);
        RightComponent.repaint();
        RightComponent.revalidate();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        Parent = new javax.swing.JPanel();
        Login = new javax.swing.JPanel();
        username = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        password = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        lbLogo = new javax.swing.JLabel();
        Register = new javax.swing.JPanel();
        username1 = new javax.swing.JLabel();
        usernameTextField1 = new javax.swing.JTextField();
        password1 = new javax.swing.JLabel();
        passwordTextField1 = new javax.swing.JPasswordField();
        emailID = new javax.swing.JLabel();
        mailIDTextField = new javax.swing.JTextField();
        phone = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        role = new javax.swing.JLabel();
        rolesComboBox = new javax.swing.JComboBox<>();
        gender = new javax.swing.JLabel();
        maleButton = new javax.swing.JRadioButton();
        femaleButton = new javax.swing.JRadioButton();
        othersButton = new javax.swing.JRadioButton();
        DOB = new javax.swing.JLabel();
        register = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        medicalLicenseNumberTextField = new javax.swing.JTextField();
        medicalLicense = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        firtsNameTextFieldRegister = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        lastNameTextFieldRegister = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        userAddress = new javax.swing.JTextArea();
        zipCode = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        Workspace = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        leftWelcome = new javax.swing.JLabel();
        leftAccID = new javax.swing.JLabel();
        RightComponent = new javax.swing.JPanel();
        PatientHome = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        createAppointment = new javax.swing.JButton();
        viewAppoitnmentPatient = new javax.swing.JButton();
        CreatePatientAppointment = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        PatientAppointmentDate = new javax.swing.JLabel();
        PatientAppointmentSubmit = new javax.swing.JButton();
        PatientAppointmentCancel = new javax.swing.JButton();
        PatientAppointmentDoctor = new javax.swing.JLabel();
        PatientAppointmentDrList = new javax.swing.JComboBox<>();
        PatientAppointmentReason = new javax.swing.JLabel();
        PatientAppointmentReasonArea = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        PatientAppointmentDateChooser = new com.toedter.calendar.JDateChooser();
        ViewPatientAppointment = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        PatienAppointmentHistory = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        BackToPatientHome = new javax.swing.JButton();
        ViewAppointmentUsername = new javax.swing.JLabel();
        ViewAppointmentWith = new javax.swing.JLabel();
        ViewAppointmentDate = new javax.swing.JLabel();
        HeartRate = new javax.swing.JLabel();
        ViewAppointmentAilment = new javax.swing.JLabel();
        BloodpressureViewAppointment = new javax.swing.JLabel();
        temperatureViewAppointment = new javax.swing.JLabel();
        respirationRateViewAppointment = new javax.swing.JLabel();
        DiagnosisViewAppointment = new javax.swing.JLabel();
        HeightViewAppointment = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        DoctorHome = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DoctorAppointment = new javax.swing.JTable();
        AddVitalSigns = new javax.swing.JButton();
        VitalSignsPage = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        DoctorHomeBack = new javax.swing.JButton();
        AddVitalSignsToEncounter = new javax.swing.JButton();
        ClearVitalSigns = new javax.swing.JButton();
        userName = new javax.swing.JTextField();
        encounterID = new javax.swing.JTextField();
        usernameVitalSignsRecording = new javax.swing.JLabel();
        encounterIDVitalSignsRecording = new javax.swing.JLabel();
        patientAgeFieldVitalSignsRecording = new javax.swing.JTextField();
        patientAgeVitalSignsRecording = new javax.swing.JLabel();
        bloodGroupIDVitalSignsRecording = new javax.swing.JLabel();
        bloodGroupFieldVitalSignsRecording = new javax.swing.JTextField();
        heightVitalSignsRecording1 = new javax.swing.JLabel();
        bloodPressureIDVitalSignsRecording = new javax.swing.JLabel();
        temperatureVitalSignsRecording3 = new javax.swing.JLabel();
        respirationRateIDVitalSignsRecording4 = new javax.swing.JLabel();
        heightFieldVitalSignsRecording1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        bloodPressureFieldVitalSignsRecording = new javax.swing.JTextField();
        respirationRateFieldVitalSignsRecording = new javax.swing.JTextField();
        temperatureFieldVitalSignsRecording4 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        diagnosisVitalSignsRecording1 = new javax.swing.JLabel();
        ailmentVitalSignsRecording2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        SystemAdminHome = new javax.swing.JPanel();
        SystemAdminHomeTitle = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        patientListForSysAdmin = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        doctorListForSysAdmin = new javax.swing.JTable();
        accountDisable = new javax.swing.JButton();
        accountDisablePat = new javax.swing.JButton();
        addNewUser = new javax.swing.JButton();
        accountEnablePat = new javax.swing.JButton();
        accountEnable = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        RegisterViaSysAdmin = new javax.swing.JPanel();
        userNameSysAdmin = new javax.swing.JLabel();
        passwordSysAdmin = new javax.swing.JLabel();
        mailIDSysAdmin = new javax.swing.JLabel();
        phoneSysAdmin = new javax.swing.JLabel();
        roleSysAdmin = new javax.swing.JLabel();
        genderSysAdmin = new javax.swing.JLabel();
        dobSysAdmin = new javax.swing.JLabel();
        mlnSysAdmin = new javax.swing.JLabel();
        unameTextSysAdmin = new javax.swing.JTextField();
        passwordFieldSysAdmin = new javax.swing.JPasswordField();
        mailTextFieldSysAdmin = new javax.swing.JTextField();
        numberTextFieldSysAdmin = new javax.swing.JTextField();
        comboBoxSysAdmin = new javax.swing.JComboBox<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        mlnTextFieldSysAdmin = new javax.swing.JTextField();
        cancelSysAdmin = new javax.swing.JButton();
        registerSysAdmin = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lastNameTextFieldSysAdmin = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        firstNameTextFieldSysAdmin = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        dateChooserSysAdmin = new com.toedter.calendar.JDateChooser();
        ViewUpdateUser = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblPatientDetails = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        tblDoctorDetails = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        tblName1 = new javax.swing.JTextField();
        tblEmail1 = new javax.swing.JTextField();
        tblPhone1 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        tblName2 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        tblEmail2 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        tblPhone2 = new javax.swing.JTextField();
        HospitalAdmin = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        HospitalAdminTable = new javax.swing.JTable();
        deleteAll = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        viewUpdateUsers = new javax.swing.JButton();
        Grievences = new javax.swing.JPanel();
        MailIDGrievencesLabel = new javax.swing.JLabel();
        mailIDGrievences = new javax.swing.JTextField();
        NumberGrievencesLabel = new javax.swing.JLabel();
        NumberGrievences = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        CancelGrievences = new javax.swing.JButton();
        SubmitGrievences = new javax.swing.JButton();
        grievencesComboBox = new javax.swing.JComboBox<>();
        grievencesSysAdmin = new javax.swing.JLabel();
        addHospital = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(237, 230, 185));
        getContentPane().setLayout(new java.awt.CardLayout());

        Parent.setLayout(new java.awt.CardLayout());

        Login.setBackground(new java.awt.Color(237, 230, 185));

        username.setBackground(new java.awt.Color(130, 144, 121));
        username.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        username.setForeground(new java.awt.Color(185, 146, 94));
        username.setText("Username:");

        usernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldActionPerformed(evt);
            }
        });

        password.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        password.setForeground(new java.awt.Color(185, 146, 94));
        password.setText("Password:");

        jButton1.setBackground(new java.awt.Color(130, 144, 121));
        jButton1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(185, 146, 94));
        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(211, 211, 211));
        jButton2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(185, 146, 94));
        jButton2.setText("Register");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jToggleButton1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jToggleButton1.setForeground(new java.awt.Color(185, 146, 94));
        jToggleButton1.setText("Add Hospital");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        lbLogo.setText("Image Icon");

        javax.swing.GroupLayout LoginLayout = new javax.swing.GroupLayout(Login);
        Login.setLayout(LoginLayout);
        LoginLayout.setHorizontalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLayout.createSequentialGroup()
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(LoginLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, LoginLayout.createSequentialGroup()
                            .addGap(330, 330, 330)
                            .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(username)
                                .addGroup(LoginLayout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(password)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(22, 22, 22)
                            .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(usernameTextField)
                                .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(LoginLayout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(343, Short.MAX_VALUE))
        );
        LoginLayout.setVerticalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username))
                .addGap(21, 21, 21)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password))
                .addGap(68, 68, 68)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(89, 89, 89)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
        );

        Parent.add(Login, "card2");

        Register.setBackground(new java.awt.Color(237, 230, 185));
        Register.setLayout(null);

        username1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        username1.setForeground(new java.awt.Color(185, 146, 94));
        username1.setText("Username:");
        Register.add(username1);
        username1.setBounds(70, 230, 130, 24);
        Register.add(usernameTextField1);
        usernameTextField1.setBounds(290, 230, 190, 22);

        password1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        password1.setForeground(new java.awt.Color(185, 146, 94));
        password1.setText("Password:");
        Register.add(password1);
        password1.setBounds(590, 230, 120, 24);

        passwordTextField1.setText("jPasswordField1");
        Register.add(passwordTextField1);
        passwordTextField1.setBounds(770, 230, 172, 22);

        emailID.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        emailID.setForeground(new java.awt.Color(185, 146, 94));
        emailID.setText("Email ID:");
        Register.add(emailID);
        emailID.setBounds(70, 270, 130, 24);
        Register.add(mailIDTextField);
        mailIDTextField.setBounds(290, 270, 190, 22);

        phone.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        phone.setForeground(new java.awt.Color(185, 146, 94));
        phone.setText("Phone No. :");
        Register.add(phone);
        phone.setBounds(590, 270, 120, 24);

        phoneTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTextFieldActionPerformed(evt);
            }
        });
        Register.add(phoneTextField);
        phoneTextField.setBounds(770, 270, 172, 22);

        role.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        role.setForeground(new java.awt.Color(185, 146, 94));
        role.setText("Role:");
        Register.add(role);
        role.setBounds(70, 310, 83, 24);

        rolesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient", "Doctor", "System Administration", "Hospital Administration" }));
        rolesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolesComboBoxActionPerformed(evt);
            }
        });
        Register.add(rolesComboBox);
        rolesComboBox.setBounds(290, 310, 190, 22);

        gender.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        gender.setForeground(new java.awt.Color(185, 146, 94));
        gender.setText("Gender:");
        Register.add(gender);
        gender.setBounds(70, 350, 83, 24);

        genderButtonGroup.add(maleButton);
        maleButton.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        maleButton.setText("Male");
        maleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleButtonActionPerformed(evt);
            }
        });
        Register.add(maleButton);
        maleButton.setBounds(290, 350, 52, 21);

        genderButtonGroup.add(femaleButton);
        femaleButton.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        femaleButton.setText("Female");
        femaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleButtonActionPerformed(evt);
            }
        });
        Register.add(femaleButton);
        femaleButton.setBounds(350, 350, 68, 21);

        genderButtonGroup.add(othersButton);
        othersButton.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        othersButton.setText("Others");
        othersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                othersButtonActionPerformed(evt);
            }
        });
        Register.add(othersButton);
        othersButton.setBounds(420, 350, 70, 21);

        DOB.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        DOB.setForeground(new java.awt.Color(185, 146, 94));
        DOB.setText("Date of birth:");
        Register.add(DOB);
        DOB.setBounds(70, 390, 135, 24);

        register.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        register.setForeground(new java.awt.Color(185, 146, 94));
        register.setText("REGISTER");
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });
        Register.add(register);
        register.setBounds(410, 550, 210, 40);

        jButton3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(185, 146, 94));
        jButton3.setText("BACK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        Register.add(jButton3);
        jButton3.setBounds(50, 50, 130, 40);
        Register.add(medicalLicenseNumberTextField);
        medicalLicenseNumberTextField.setBounds(290, 430, 190, 30);

        medicalLicense.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        medicalLicense.setForeground(new java.awt.Color(185, 146, 94));
        medicalLicense.setText("Medical license No.:");
        Register.add(medicalLicense);
        medicalLicense.setBounds(70, 430, 201, 30);

        jLabel11.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(185, 146, 94));
        jLabel11.setText("First Name:");
        Register.add(jLabel11);
        jLabel11.setBounds(70, 190, 130, 20);

        firtsNameTextFieldRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firtsNameTextFieldRegisterActionPerformed(evt);
            }
        });
        Register.add(firtsNameTextFieldRegister);
        firtsNameTextFieldRegister.setBounds(290, 190, 190, 22);

        jLabel12.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(185, 146, 94));
        jLabel12.setText("Last Name:");
        Register.add(jLabel12);
        jLabel12.setBounds(590, 190, 130, 20);
        Register.add(lastNameTextFieldRegister);
        lastNameTextFieldRegister.setBounds(770, 190, 170, 22);

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(185, 146, 94));
        jLabel13.setText("Hospital:");
        Register.add(jLabel13);
        jLabel13.setBounds(590, 310, 120, 20);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        Register.add(jComboBox1);
        jComboBox1.setBounds(770, 310, 170, 22);

        jLabel10.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(185, 146, 94));
        jLabel10.setText("Address:");
        Register.add(jLabel10);
        jLabel10.setBounds(590, 390, 110, 23);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        userAddress.setColumns(20);
        userAddress.setRows(5);
        jScrollPane4.setViewportView(userAddress);

        Register.add(jScrollPane4);
        jScrollPane4.setBounds(770, 390, 170, 60);
        Register.add(zipCode);
        zipCode.setBounds(770, 350, 170, 22);

        jLabel14.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(185, 146, 94));
        jLabel14.setText("Zip code:");
        Register.add(jLabel14);
        jLabel14.setBounds(590, 350, 110, 23);
        Register.add(jDateChooser1);
        jDateChooser1.setBounds(290, 390, 190, 22);

        Parent.add(Register, "card3");

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setDividerSize(3);

        jPanel1.setBackground(new java.awt.Color(130, 144, 121));

        jButton5.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(185, 146, 94));
        jButton5.setText("LOG OUT");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        leftWelcome.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        leftWelcome.setForeground(new java.awt.Color(237, 230, 185));
        leftWelcome.setText("Welcome:");

        leftAccID.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        leftAccID.setForeground(new java.awt.Color(237, 230, 185));
        leftAccID.setText("Acc. ID:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(leftAccID)
                            .addComponent(leftWelcome)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(leftWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(leftAccID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 576, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(14, 14, 14))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        RightComponent.setBackground(new java.awt.Color(255, 255, 255));
        RightComponent.setLayout(new java.awt.CardLayout());

        PatientHome.setBackground(new java.awt.Color(237, 230, 185));

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(185, 146, 94));
        jLabel1.setText("Welcome Patient");

        createAppointment.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        createAppointment.setForeground(new java.awt.Color(185, 146, 94));
        createAppointment.setText("Create Appointment");
        createAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAppointmentActionPerformed(evt);
            }
        });

        viewAppoitnmentPatient.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        viewAppoitnmentPatient.setForeground(new java.awt.Color(185, 146, 94));
        viewAppoitnmentPatient.setText("View Appointments");
        viewAppoitnmentPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAppoitnmentPatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PatientHomeLayout = new javax.swing.GroupLayout(PatientHome);
        PatientHome.setLayout(PatientHomeLayout);
        PatientHomeLayout.setHorizontalGroup(
            PatientHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientHomeLayout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addGroup(PatientHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PatientHomeLayout.createSequentialGroup()
                        .addComponent(createAppointment)
                        .addGap(66, 66, 66)
                        .addComponent(viewAppoitnmentPatient))
                    .addGroup(PatientHomeLayout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(360, Short.MAX_VALUE))
        );
        PatientHomeLayout.setVerticalGroup(
            PatientHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientHomeLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(253, 253, 253)
                .addGroup(PatientHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewAppoitnmentPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(391, Short.MAX_VALUE))
        );

        RightComponent.add(PatientHome, "card2");

        CreatePatientAppointment.setBackground(new java.awt.Color(237, 230, 185));

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 17)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(185, 146, 94));
        jLabel2.setText("Appointment Creation");

        PatientAppointmentDate.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        PatientAppointmentDate.setForeground(new java.awt.Color(185, 146, 94));
        PatientAppointmentDate.setText("Date of appointment:");

        PatientAppointmentSubmit.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        PatientAppointmentSubmit.setForeground(new java.awt.Color(185, 146, 94));
        PatientAppointmentSubmit.setText("SUBMIT");
        PatientAppointmentSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientAppointmentSubmitActionPerformed(evt);
            }
        });

        PatientAppointmentCancel.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        PatientAppointmentCancel.setForeground(new java.awt.Color(185, 146, 94));
        PatientAppointmentCancel.setText("BACK");
        PatientAppointmentCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientAppointmentCancelActionPerformed(evt);
            }
        });

        PatientAppointmentDoctor.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        PatientAppointmentDoctor.setForeground(new java.awt.Color(185, 146, 94));
        PatientAppointmentDoctor.setText("Appointment with:");

        PatientAppointmentDrList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not Selected" }));

        PatientAppointmentReason.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        PatientAppointmentReason.setForeground(new java.awt.Color(185, 146, 94));
        PatientAppointmentReason.setText("Ailment:");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        PatientAppointmentReasonArea.setViewportView(jTextArea2);

        javax.swing.GroupLayout CreatePatientAppointmentLayout = new javax.swing.GroupLayout(CreatePatientAppointment);
        CreatePatientAppointment.setLayout(CreatePatientAppointmentLayout);
        CreatePatientAppointmentLayout.setHorizontalGroup(
            CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(PatientAppointmentCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                                .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(PatientAppointmentDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(PatientAppointmentDate))
                                    .addComponent(PatientAppointmentReason, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(PatientAppointmentDrList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PatientAppointmentReasonArea)
                                    .addComponent(PatientAppointmentDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(PatientAppointmentSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(jLabel2)))
                .addContainerGap(412, Short.MAX_VALUE))
        );
        CreatePatientAppointmentLayout.setVerticalGroup(
            CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PatientAppointmentCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180)
                .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PatientAppointmentDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PatientAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PatientAppointmentDrList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PatientAppointmentDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(CreatePatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(PatientAppointmentReasonArea, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CreatePatientAppointmentLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(PatientAppointmentReason, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(96, 96, 96)
                .addComponent(PatientAppointmentSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(151, 151, 151))
        );

        RightComponent.add(CreatePatientAppointment, "card3");

        ViewPatientAppointment.setBackground(new java.awt.Color(237, 230, 185));

        PatienAppointmentHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Encounter ID", "Dr. Information", "Appointment date", "Ailment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PatienAppointmentHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PatienAppointmentHistoryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(PatienAppointmentHistory);
        if (PatienAppointmentHistory.getColumnModel().getColumnCount() > 0) {
            PatienAppointmentHistory.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(185, 146, 94));
        jLabel3.setText("View Appointments");

        BackToPatientHome.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        BackToPatientHome.setForeground(new java.awt.Color(185, 146, 94));
        BackToPatientHome.setText("Back");
        BackToPatientHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToPatientHomeActionPerformed(evt);
            }
        });

        ViewAppointmentUsername.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        ViewAppointmentUsername.setForeground(new java.awt.Color(185, 146, 94));
        ViewAppointmentUsername.setText("Username:");

        ViewAppointmentWith.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        ViewAppointmentWith.setForeground(new java.awt.Color(185, 146, 94));
        ViewAppointmentWith.setText("Appointment with:");

        ViewAppointmentDate.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        ViewAppointmentDate.setForeground(new java.awt.Color(185, 146, 94));
        ViewAppointmentDate.setText("Date:");

        HeartRate.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        HeartRate.setForeground(new java.awt.Color(185, 146, 94));
        HeartRate.setText("Heart Rate:");

        ViewAppointmentAilment.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        ViewAppointmentAilment.setForeground(new java.awt.Color(185, 146, 94));
        ViewAppointmentAilment.setText("Ailment:");

        BloodpressureViewAppointment.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        BloodpressureViewAppointment.setForeground(new java.awt.Color(185, 146, 94));
        BloodpressureViewAppointment.setText("Blood Pressure:");

        temperatureViewAppointment.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        temperatureViewAppointment.setForeground(new java.awt.Color(185, 146, 94));
        temperatureViewAppointment.setText("Temperature:");

        respirationRateViewAppointment.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        respirationRateViewAppointment.setForeground(new java.awt.Color(185, 146, 94));
        respirationRateViewAppointment.setText("Respiration Rate:");

        DiagnosisViewAppointment.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        DiagnosisViewAppointment.setForeground(new java.awt.Color(185, 146, 94));
        DiagnosisViewAppointment.setText("Diagnosis:");

        HeightViewAppointment.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        HeightViewAppointment.setForeground(new java.awt.Color(185, 146, 94));
        HeightViewAppointment.setText("Height:");

        jButton9.setBackground(new java.awt.Color(169, 23, 16));
        jButton9.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(185, 146, 94));
        jButton9.setText("DELETE");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewPatientAppointmentLayout = new javax.swing.GroupLayout(ViewPatientAppointment);
        ViewPatientAppointment.setLayout(ViewPatientAppointmentLayout);
        ViewPatientAppointmentLayout.setHorizontalGroup(
            ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(233, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewPatientAppointmentLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewPatientAppointmentLayout.createSequentialGroup()
                                .addComponent(ViewAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewPatientAppointmentLayout.createSequentialGroup()
                                .addComponent(DiagnosisViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(219, 219, 219))))))
            .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ViewAppointmentUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HeightViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BackToPatientHome, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BloodpressureViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ViewAppointmentWith, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ViewAppointmentAilment, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(respirationRateViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(temperatureViewAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ViewPatientAppointmentLayout.createSequentialGroup()
                        .addGap(311, 311, 311)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ViewPatientAppointmentLayout.setVerticalGroup(
            ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewPatientAppointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BackToPatientHome, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(ViewAppointmentDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewAppointmentUsername)
                    .addComponent(ViewAppointmentWith))
                .addGap(61, 61, 61)
                .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HeartRate)
                    .addComponent(temperatureViewAppointment))
                .addGap(26, 26, 26)
                .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BloodpressureViewAppointment)
                    .addComponent(respirationRateViewAppointment))
                .addGap(29, 29, 29)
                .addGroup(ViewPatientAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HeightViewAppointment)
                    .addComponent(ViewAppointmentAilment))
                .addGap(58, 58, 58)
                .addComponent(DiagnosisViewAppointment)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        RightComponent.add(ViewPatientAppointment, "card4");

        DoctorHome.setBackground(new java.awt.Color(237, 230, 185));

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(185, 146, 94));
        jLabel4.setText("Welcome Doctor");

        DoctorAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appointment ID", "Patient ID", "Patient Name", "Appointment date", "Ailment"
            }
        ));
        jScrollPane3.setViewportView(DoctorAppointment);

        AddVitalSigns.setBackground(new java.awt.Color(130, 144, 121));
        AddVitalSigns.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        AddVitalSigns.setForeground(new java.awt.Color(185, 146, 94));
        AddVitalSigns.setText("Add Vital Signs");
        AddVitalSigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddVitalSignsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DoctorHomeLayout = new javax.swing.GroupLayout(DoctorHome);
        DoctorHome.setLayout(DoctorHomeLayout);
        DoctorHomeLayout.setHorizontalGroup(
            DoctorHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorHomeLayout.createSequentialGroup()
                .addGroup(DoctorHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE)
                    .addGroup(DoctorHomeLayout.createSequentialGroup()
                        .addContainerGap(826, Short.MAX_VALUE)
                        .addComponent(AddVitalSigns, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(DoctorHomeLayout.createSequentialGroup()
                .addGap(359, 359, 359)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DoctorHomeLayout.setVerticalGroup(
            DoctorHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorHomeLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 337, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(AddVitalSigns, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        RightComponent.add(DoctorHome, "card5");

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel7.setText("Vital Signs Recording");

        DoctorHomeBack.setText("Back");
        DoctorHomeBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorHomeBackActionPerformed(evt);
            }
        });

        AddVitalSignsToEncounter.setText("Add Vital Signs");
        AddVitalSignsToEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddVitalSignsToEncounterActionPerformed(evt);
            }
        });

        ClearVitalSigns.setText("Clear");

        usernameVitalSignsRecording.setText("Username:");

        encounterIDVitalSignsRecording.setText("Encounter ID:");

        patientAgeVitalSignsRecording.setText("Age:");

        bloodGroupIDVitalSignsRecording.setText("Blood group:");

        heightVitalSignsRecording1.setText("Height:");

        bloodPressureIDVitalSignsRecording.setText("Blood pressure:");

        temperatureVitalSignsRecording3.setText("Temperature:");

        respirationRateIDVitalSignsRecording4.setText("Respiration rate:");

        jLabel9.setText("cm");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane5.setViewportView(jTextArea3);

        diagnosisVitalSignsRecording1.setText("Diagnosis:");

        ailmentVitalSignsRecording2.setText("Ailment:");

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane6.setViewportView(jTextArea4);

        javax.swing.GroupLayout VitalSignsPageLayout = new javax.swing.GroupLayout(VitalSignsPage);
        VitalSignsPage.setLayout(VitalSignsPageLayout);
        VitalSignsPageLayout.setHorizontalGroup(
            VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VitalSignsPageLayout.createSequentialGroup()
                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usernameVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(encounterIDVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(encounterID, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(respirationRateIDVitalSignsRecording4, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(bloodGroupIDVitalSignsRecording)
                                                    .addComponent(patientAgeVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(bloodGroupFieldVitalSignsRecording, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(patientAgeFieldVitalSignsRecording, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                                .addComponent(temperatureVitalSignsRecording3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(temperatureFieldVitalSignsRecording4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(27, 27, 27))
                                    .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34))))
                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ClearVitalSigns)))
                        .addGap(18, 18, 18)
                        .addComponent(AddVitalSignsToEncounter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DoctorHomeBack)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VitalSignsPageLayout.createSequentialGroup()
                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                .addComponent(bloodPressureIDVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bloodPressureFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                .addComponent(heightVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(heightFieldVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(respirationRateFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(262, 262, 262))
                    .addGroup(VitalSignsPageLayout.createSequentialGroup()
                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                                .addComponent(diagnosisVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VitalSignsPageLayout.createSequentialGroup()
                                .addComponent(ailmentVitalSignsRecording2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                            .addComponent(jScrollPane5))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        VitalSignsPageLayout.setVerticalGroup(
            VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VitalSignsPageLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientAgeFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientAgeVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encounterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(encounterIDVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodGroupIDVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodGroupFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(temperatureVitalSignsRecording3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(heightVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(heightFieldVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(temperatureFieldVitalSignsRecording4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodPressureIDVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(respirationRateIDVitalSignsRecording4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodPressureFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(respirationRateFieldVitalSignsRecording, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ailmentVitalSignsRecording2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diagnosisVitalSignsRecording1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 287, Short.MAX_VALUE)
                .addGroup(VitalSignsPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DoctorHomeBack)
                    .addComponent(AddVitalSignsToEncounter)
                    .addComponent(ClearVitalSigns))
                .addGap(37, 37, 37))
        );

        RightComponent.add(VitalSignsPage, "card7");

        SystemAdminHome.setBackground(new java.awt.Color(237, 230, 185));

        SystemAdminHomeTitle.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        SystemAdminHomeTitle.setForeground(new java.awt.Color(185, 146, 94));
        SystemAdminHomeTitle.setText("Welcome System Administrator");

        patientListForSysAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient ID", "Patient Name", "Patient Gender", "Patient Mail ID", "Patietn Contact Number", "Account Status"
            }
        ));
        jScrollPane7.setViewportView(patientListForSysAdmin);

        doctorListForSysAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor ID", "Doctor Name", "Doctor Mail ID", "Doctor Contact Number", "Account Status"
            }
        ));
        doctorListForSysAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                doctorListForSysAdminMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(doctorListForSysAdmin);

        accountDisable.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        accountDisable.setForeground(new java.awt.Color(185, 146, 94));
        accountDisable.setText("Disable Doctor Account");
        accountDisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountDisableActionPerformed(evt);
            }
        });

        accountDisablePat.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        accountDisablePat.setForeground(new java.awt.Color(185, 146, 94));
        accountDisablePat.setText("Disable Patient Account");
        accountDisablePat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountDisablePatActionPerformed(evt);
            }
        });

        addNewUser.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        addNewUser.setForeground(new java.awt.Color(185, 146, 94));
        addNewUser.setText("Add User");
        addNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewUserActionPerformed(evt);
            }
        });

        accountEnablePat.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        accountEnablePat.setForeground(new java.awt.Color(185, 146, 94));
        accountEnablePat.setText("Enable Patient Account");
        accountEnablePat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountEnablePatActionPerformed(evt);
            }
        });

        accountEnable.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        accountEnable.setForeground(new java.awt.Color(185, 146, 94));
        accountEnable.setText("Enable Doctor Account");
        accountEnable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountEnableActionPerformed(evt);
            }
        });

        jButton6.setText("View Grievences");

        jLabel15.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(185, 146, 94));
        jLabel15.setText("Patient List");

        jLabel24.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(185, 146, 94));
        jLabel24.setText("Doctor List");

        javax.swing.GroupLayout SystemAdminHomeLayout = new javax.swing.GroupLayout(SystemAdminHome);
        SystemAdminHome.setLayout(SystemAdminHomeLayout);
        SystemAdminHomeLayout.setHorizontalGroup(
            SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                            .addGap(106, 106, 106)
                            .addComponent(jButton6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, SystemAdminHomeLayout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 835, Short.MAX_VALUE)
                                .addComponent(jScrollPane8))))
                    .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(accountEnablePat)
                        .addGap(65, 65, 65)
                        .addComponent(accountDisablePat))
                    .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(accountEnable)
                        .addGap(73, 73, 73)
                        .addComponent(accountDisable))
                    .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                        .addGap(410, 410, 410)
                        .addComponent(jLabel24))
                    .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                        .addGap(396, 396, 396)
                        .addComponent(jLabel15))
                    .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(SystemAdminHomeTitle)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SystemAdminHomeLayout.setVerticalGroup(
            SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SystemAdminHomeLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(SystemAdminHomeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(49, 49, 49)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountDisablePat)
                    .addComponent(accountEnablePat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SystemAdminHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountDisable)
                    .addComponent(accountEnable))
                .addGap(118, 118, 118))
        );

        RightComponent.add(SystemAdminHome, "card8");

        RegisterViaSysAdmin.setBackground(new java.awt.Color(237, 230, 185));

        userNameSysAdmin.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        userNameSysAdmin.setForeground(new java.awt.Color(185, 146, 94));
        userNameSysAdmin.setText("Username:");

        passwordSysAdmin.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        passwordSysAdmin.setForeground(new java.awt.Color(185, 146, 94));
        passwordSysAdmin.setText("Password:");

        mailIDSysAdmin.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        mailIDSysAdmin.setForeground(new java.awt.Color(185, 146, 94));
        mailIDSysAdmin.setText("Email ID:");

        phoneSysAdmin.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        phoneSysAdmin.setForeground(new java.awt.Color(185, 146, 94));
        phoneSysAdmin.setText("Phone No.:");

        roleSysAdmin.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        roleSysAdmin.setForeground(new java.awt.Color(185, 146, 94));
        roleSysAdmin.setText("Role:");

        genderSysAdmin.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        genderSysAdmin.setForeground(new java.awt.Color(185, 146, 94));
        genderSysAdmin.setText("Gender:");
        genderSysAdmin.setToolTipText("");

        dobSysAdmin.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        dobSysAdmin.setForeground(new java.awt.Color(185, 146, 94));
        dobSysAdmin.setText("Date of birth:");

        mlnSysAdmin.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        mlnSysAdmin.setForeground(new java.awt.Color(185, 146, 94));
        mlnSysAdmin.setText("Medical license No.:");

        comboBoxSysAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Patient", "Doctor" }));
        comboBoxSysAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxSysAdminActionPerformed(evt);
            }
        });

        genderButtonGroup.add(jRadioButton1);
        jRadioButton1.setText("Male");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        genderButtonGroup.add(jRadioButton2);
        jRadioButton2.setText("Female");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        genderButtonGroup.add(jRadioButton3);
        jRadioButton3.setText("Others");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        cancelSysAdmin.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        cancelSysAdmin.setForeground(new java.awt.Color(185, 146, 94));
        cancelSysAdmin.setText("BACK");
        cancelSysAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelSysAdminActionPerformed(evt);
            }
        });

        registerSysAdmin.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        registerSysAdmin.setForeground(new java.awt.Color(185, 146, 94));
        registerSysAdmin.setText("REGISTER");
        registerSysAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerSysAdminActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(185, 146, 94));
        jLabel6.setText("First Name:");

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(185, 146, 94));
        jLabel8.setText("Last Name:");

        firstNameTextFieldSysAdmin.setToolTipText("");
        firstNameTextFieldSysAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldSysAdminActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(185, 146, 94));
        jLabel20.setText("Address:");

        jTextArea6.setColumns(20);
        jTextArea6.setRows(5);
        jScrollPane10.setViewportView(jTextArea6);

        jLabel21.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(185, 146, 94));
        jLabel21.setText("Hospital:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jLabel22.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(185, 146, 94));
        jLabel22.setText("Zip code:");

        javax.swing.GroupLayout RegisterViaSysAdminLayout = new javax.swing.GroupLayout(RegisterViaSysAdmin);
        RegisterViaSysAdmin.setLayout(RegisterViaSysAdminLayout);
        RegisterViaSysAdminLayout.setHorizontalGroup(
            RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userNameSysAdmin)
                                    .addComponent(jLabel6)
                                    .addComponent(mailIDSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roleSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dobSysAdmin)
                                    .addComponent(mlnSysAdmin)
                                    .addComponent(cancelSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(firstNameTextFieldSysAdmin)
                                    .addComponent(unameTextSysAdmin)
                                    .addComponent(mailTextFieldSysAdmin)
                                    .addComponent(comboBoxSysAdmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dateChooserSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(mlnTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(88, 88, 88)
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(122, 122, 122)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(phoneSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(passwordSysAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addComponent(genderSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel21)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(passwordFieldSysAdmin)
                                .addComponent(numberTextFieldSysAdmin)
                                .addComponent(lastNameTextFieldSysAdmin)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton3))))
                    .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(registerSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RegisterViaSysAdminLayout.setVerticalGroup(
            RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(cancelSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lastNameTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordSysAdmin)
                            .addComponent(passwordFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneSysAdmin)
                            .addComponent(numberTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(RegisterViaSysAdminLayout.createSequentialGroup()
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNameTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userNameSysAdmin)
                            .addComponent(unameTextSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mailTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mailIDSysAdmin))))
                .addGap(18, 18, 18)
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genderSysAdmin)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(roleSysAdmin))
                .addGap(21, 21, 21)
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dobSysAdmin)
                    .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dateChooserSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mlnSysAdmin)
                    .addComponent(mlnTextFieldSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterViaSysAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(134, 134, 134)
                .addComponent(registerSysAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
        );

        RightComponent.add(RegisterViaSysAdmin, "card9");

        tblPatientDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Email ID", "Phone Number"
            }
        ));
        tblPatientDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientDetailsMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(tblPatientDetails);

        tblDoctorDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Email ID", "Phone Number"
            }
        ));
        jScrollPane13.setViewportView(tblDoctorDetails);

        jButton11.setText("View Patient Details");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Update Patient Details");

        jButton13.setText("View Patient Details");

        jButton14.setText("Update Patient Details");

        jLabel32.setText("Name");

        jLabel33.setText("Email ID");

        jLabel34.setText("Phone Number");

        jLabel35.setText("Name");

        jLabel36.setText("Email ID");

        jLabel37.setText("Phone Number");

        javax.swing.GroupLayout ViewUpdateUserLayout = new javax.swing.GroupLayout(ViewUpdateUser);
        ViewUpdateUser.setLayout(ViewUpdateUserLayout);
        ViewUpdateUserLayout.setHorizontalGroup(
            ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewUpdateUserLayout.createSequentialGroup()
                .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel32))))
                    .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(25, 25, 25)
                        .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                                .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel36)
                                        .addComponent(jLabel35))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tblPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                                            .addGap(12, 12, 12)
                                            .addComponent(jLabel34))
                                        .addComponent(tblEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                                            .addGap(30, 30, 30)
                                            .addComponent(jLabel33))))
                                .addGap(17, 17, 17))
                            .addComponent(tblName2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tblPhone2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tblEmail2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel37)))))
                .addGap(62, 62, 62)
                .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );
        ViewUpdateUserLayout.setVerticalGroup(
            ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                                .addComponent(jButton11)
                                .addGap(39, 39, 39)
                                .addComponent(jButton12))
                            .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                                .addComponent(jLabel32)
                                .addGap(18, 18, 18)
                                .addComponent(tblName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel33)
                                .addGap(18, 18, 18)
                                .addComponent(tblEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(109, 109, 109))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewUpdateUserLayout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(jLabel34)
                        .addGap(18, 18, 18)
                        .addComponent(tblPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewUpdateUserLayout.createSequentialGroup()
                        .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                                .addComponent(jButton13)
                                .addGap(32, 32, 32)
                                .addComponent(jButton14)
                                .addGap(136, 136, 136))
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewUpdateUserLayout.createSequentialGroup()
                        .addGroup(ViewUpdateUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                                .addComponent(tblName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))
                            .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addGap(85, 85, 85)))
                        .addComponent(jLabel36)
                        .addGap(18, 18, 18)
                        .addComponent(tblEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel37)
                        .addGap(18, 18, 18)
                        .addComponent(tblPhone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
            .addGroup(ViewUpdateUserLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        RightComponent.add(ViewUpdateUser, "card7");

        HospitalAdmin.setBackground(new java.awt.Color(237, 230, 185));

        jLabel23.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(185, 146, 94));
        jLabel23.setText("Welcome Hospital Admin");

        HospitalAdminTable.setForeground(new java.awt.Color(185, 146, 94));
        HospitalAdminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User ID", "User name", "Date of birth", "Mail ID", "Phone number", "Account status", "Account type"
            }
        ));
        jScrollPane11.setViewportView(HospitalAdminTable);

        deleteAll.setBackground(new java.awt.Color(169, 23, 16));
        deleteAll.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        deleteAll.setForeground(new java.awt.Color(185, 146, 94));
        deleteAll.setText("DELETE USER");
        deleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(185, 146, 94));
        jLabel25.setText("Delete Doctors and Patients of your Hospital");

        viewUpdateUsers.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        viewUpdateUsers.setForeground(new java.awt.Color(185, 146, 94));
        viewUpdateUsers.setText("View/Update Users");
        viewUpdateUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewUpdateUsersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HospitalAdminLayout = new javax.swing.GroupLayout(HospitalAdmin);
        HospitalAdmin.setLayout(HospitalAdminLayout);
        HospitalAdminLayout.setHorizontalGroup(
            HospitalAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HospitalAdminLayout.createSequentialGroup()
                .addGroup(HospitalAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, HospitalAdminLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, HospitalAdminLayout.createSequentialGroup()
                        .addGroup(HospitalAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HospitalAdminLayout.createSequentialGroup()
                                .addGap(367, 367, 367)
                                .addComponent(jLabel23))
                            .addGroup(HospitalAdminLayout.createSequentialGroup()
                                .addGap(309, 309, 309)
                                .addComponent(jLabel25)))
                        .addGap(0, 371, Short.MAX_VALUE))
                    .addGroup(HospitalAdminLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(viewUpdateUsers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        HospitalAdminLayout.setVerticalGroup(
            HospitalAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HospitalAdminLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117)
                .addComponent(jLabel25)
                .addGap(55, 55, 55)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 184, Short.MAX_VALUE)
                .addGroup(HospitalAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(viewUpdateUsers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteAll, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );

        RightComponent.add(HospitalAdmin, "card9");

        jSplitPane1.setRightComponent(RightComponent);

        javax.swing.GroupLayout WorkspaceLayout = new javax.swing.GroupLayout(Workspace);
        Workspace.setLayout(WorkspaceLayout);
        WorkspaceLayout.setHorizontalGroup(
            WorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        WorkspaceLayout.setVerticalGroup(
            WorkspaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        Parent.add(Workspace, "card5");

        MailIDGrievencesLabel.setText("Mail ID:");

        NumberGrievencesLabel.setText("Number:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        CancelGrievences.setText("Cancel");
        CancelGrievences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelGrievencesActionPerformed(evt);
            }
        });

        SubmitGrievences.setText("Submit");
        SubmitGrievences.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitGrievencesActionPerformed(evt);
            }
        });

        grievencesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Different", "Unable to login", "Unable to make account" }));

        grievencesSysAdmin.setText("Grievence:");

        javax.swing.GroupLayout GrievencesLayout = new javax.swing.GroupLayout(Grievences);
        Grievences.setLayout(GrievencesLayout);
        GrievencesLayout.setHorizontalGroup(
            GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GrievencesLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(CancelGrievences)
                .addGap(28, 28, 28)
                .addComponent(SubmitGrievences)
                .addGap(92, 92, 92))
            .addGroup(GrievencesLayout.createSequentialGroup()
                .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GrievencesLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(NumberGrievencesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(MailIDGrievencesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(grievencesSysAdmin))
                        .addGap(18, 18, 18)
                        .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mailIDGrievences)
                            .addComponent(NumberGrievences)
                            .addComponent(grievencesComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(GrievencesLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(301, Short.MAX_VALUE))
        );
        GrievencesLayout.setVerticalGroup(
            GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GrievencesLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mailIDGrievences, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MailIDGrievencesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberGrievencesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NumberGrievences, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grievencesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grievencesSysAdmin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 276, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(GrievencesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelGrievences)
                    .addComponent(SubmitGrievences))
                .addGap(39, 39, 39))
        );

        Parent.add(Grievences, "card5");

        addHospital.setBackground(new java.awt.Color(237, 230, 185));

        jLabel16.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(185, 146, 94));
        jLabel16.setText("Hospital name:");

        jLabel17.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(185, 146, 94));
        jLabel17.setText("Hospital address:");

        jTextArea5.setColumns(20);
        jTextArea5.setRows(5);
        jScrollPane9.setViewportView(jTextArea5);

        jLabel18.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(185, 146, 94));
        jLabel18.setText("Zip code:");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(185, 146, 94));
        jLabel19.setText("Phone number:");

        jButton7.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(185, 146, 94));
        jButton7.setText("REGISTER HOSPITAL");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(185, 146, 94));
        jButton8.setText("BACK");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addHospitalLayout = new javax.swing.GroupLayout(addHospital);
        addHospital.setLayout(addHospitalLayout);
        addHospitalLayout.setHorizontalGroup(
            addHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addHospitalLayout.createSequentialGroup()
                .addGap(0, 294, Short.MAX_VALUE)
                .addGroup(addHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(addHospitalLayout.createSequentialGroup()
                        .addGroup(addHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19))
                        .addGap(67, 67, 67)
                        .addGroup(addHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(addHospitalLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(271, 271, 271))
            .addGroup(addHospitalLayout.createSequentialGroup()
                .addGroup(addHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addHospitalLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addHospitalLayout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addHospitalLayout.setVerticalGroup(
            addHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addHospitalLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152)
                .addGroup(addHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addHospitalLayout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(addHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(addHospitalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)))
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
        );

        Parent.add(addHospital, "card6");

        getContentPane().add(Parent, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rolesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolesComboBoxActionPerformed
        disableFields();
    }//GEN-LAST:event_rolesComboBoxActionPerformed
    
    public void disableFields(){
    if (rolesComboBox.getSelectedIndex() == 1){
            medicalLicenseNumberTextField.setEnabled(true);
        }else{
            medicalLicenseNumberTextField.setEnabled(false);
        }
    }
    
    public void populatePatientTable(){
        model = (DefaultTableModel) tblPatientDetails.getModel();
        model.setRowCount(0);
        
        for(Patient pt : dir.getDir()){
            Object[] row = new Object[3];
            row[0] = pt.getName();
            row[1] = pt.getMail();
            row[2] = pt.getPhone();
            
            model.addRow(row);
        }
    }
    public void populateDoctorTable(){
        model = (DefaultTableModel) tblDoctorDetails.getModel();
        model.setRowCount(0);
        
        for(DoctorPerson dc : docDir.getDoctorDir()){
            Object[] row = new Object[3];
            row[0] = dc.getName();
            row[1] = dc.getMail();
            row[2] = dc.getPhone();
            
            model.addRow(row);
        }
    }
    
    
    public String encIDGen(){
        Random ran = new Random();
        int idInt = ran.nextInt(100);
        String encID = "ENC-"+idInt;
        return encID;
    }
    
    public String patIDGen(){
        Random ran = new Random();
        int idInt = ran.nextInt(100);
        String encID = "PAT-"+idInt;
        return encID;
    }
    
    public String sysAdminIDGen(){
        Random ran = new Random();
        int idInt = ran.nextInt(100);
        String sysAdminID = "SAM-"+idInt;
        return sysAdminID;
    }
    
    public String hospAdminIDGen(){
        Random ran = new Random();
        int idint = ran.nextInt(100);
        String hospAdminID = "HAM-"+idint;
        return hospAdminID;
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PanelPaint(Register);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        /*if (ValidationSysAdmin() != null){
            SplitPanelPaint(SystemAdminHome);
        }else if(ValidationSysAdmin() == null){
        PanelPaint(Login);
        }*/
        PanelPaint(Login);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void usernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextFieldActionPerformed
    
    public void registerationProcessSysAdmin(){
        if (comboBoxSysAdmin.getSelectedItem().toString().equals("Doctor")){
            DoctorPerson doc = docDir.addDcotorPerson();
            String name =  firstNameTextFieldSysAdmin.getText()+ " "+lastNameTextFieldSysAdmin.getText();
            doc.setName(name);
            doc.setUsername(unameTextSysAdmin.getText());
            doc.setPassword(String.valueOf(passwordFieldSysAdmin.getPassword()));
            doc.setMail(mailIDSysAdmin.getText());
            doc.setRole(comboBoxSysAdmin.getSelectedItem().toString());
            doc.setDateOfBirth(dateChooserSysAdmin.getDate());
            doc.setPhone(Integer.parseInt(numberTextFieldSysAdmin.getText()));
            doc.setGender(genderString);
            doc.setMdeicalLicenseNumber(mlnTextFieldSysAdmin.getText());
            System.out.println(docDir.getDoctorDir().size());
            doc.setUserAddress(userAddress.getText());
            doc.setZipCode(Integer.parseInt(zipCode.getText()));
            doc.setUserAddress(name);
            //PatientAppointmentDrList.addItem(doc.getUsername() +" " +"(" + doc.getPhone() + ", " + doc.getMail() + ")");
            sysAdminDocList();
            
        }else if(comboBoxSysAdmin.getSelectedItem().toString().equals("Patient")){
            Patient person = dir.addPerson();
            String name =  firstNameTextFieldSysAdmin.getText()+ " "+lastNameTextFieldSysAdmin.getText();
            person.setName(name);
            person.setUsername(unameTextSysAdmin.getText());
            person.setPassword(String.valueOf(passwordFieldSysAdmin.getPassword()));
            person.setMail(mailTextFieldSysAdmin.getText());
            person.setRole(comboBoxSysAdmin.getSelectedItem().toString());
            person.setDateOfBirth(dateChooserSysAdmin.getDate());
            person.setPhone(Integer.parseInt(numberTextFieldSysAdmin.getText()));
            person.setGender(genderString);
            person.setUniqueID(patIDGen());
            person.setUserAddress(userAddress.getText());
            person.setZipCode(Integer.parseInt(zipCode.getText()));
            sysAdminPatientList();
        }
        
    }
    
    public void addDoctorsAsPerHospital(String hospitalName){
        for (DoctorPerson doctoAdd: docDir.getDoctorDir()){
        if (doctoAdd.getHospitalName().toString().equals(hospitalName)){
            PatientAppointmentDrList.addItem(doctoAdd.getUsername());
        }
        }
    }
    
    public void registerationProcess(){
    if (rolesComboBox.getSelectedItem().toString().equals("Doctor")){
            DoctorPerson doc = docDir.addDcotorPerson();
            String name =  firtsNameTextFieldRegister.getText()+ " "+lastNameTextFieldRegister.getText();
            doc.setName(name);
            doc.setUsername(usernameTextField1.getText());
            doc.setPassword(String.valueOf(passwordTextField1.getPassword()));
            doc.setMail(mailIDTextField.getText());
            doc.setRole(rolesComboBox.getSelectedItem().toString());
            doc.setDateOfBirth(jDateChooser1.getDate());
            doc.setPhone(Integer.parseInt(phoneTextField.getText()));
            doc.setGender(genderString);
            doc.setMdeicalLicenseNumber(medicalLicenseNumberTextField.getText());
            doc.setUserAddress(userAddress.getText());
            doc.setZipCode(Integer.parseInt(zipCode.getText()));
            doc.setHospitalName(jComboBox1.getSelectedItem().toString());
            System.out.println(docDir.getDoctorDir().size());
            //PatientAppointmentDrList.addItem(doc.getUsername() +" " +"(" + doc.getPhone() + ", " + doc.getMail() + ")");
            sysAdminDocList();
            
        }else if(rolesComboBox.getSelectedItem().toString().equals("Patient")){
            Patient person = dir.addPerson();
            String name =  firtsNameTextFieldRegister.getText()+ " "+lastNameTextFieldRegister.getText();
            person.setName(name);
            person.setUsername(usernameTextField1.getText());
            person.setPassword(String.valueOf(passwordTextField1.getPassword()));
            person.setMail(mailIDTextField.getText());
            person.setRole(rolesComboBox.getSelectedItem().toString());
            person.setDateOfBirth(jDateChooser1.getDate());
            person.setPhone(Integer.parseInt(phoneTextField.getText()));
            person.setGender(genderString);
            person.setUniqueID(patIDGen());
            person.setUserAddress(userAddress.getText());
            person.setHospitalName(jComboBox1.getSelectedItem().toString());
            person.setZipCode(Integer.parseInt(zipCode.getText()));
            sysAdminPatientList();
            
        }else if(rolesComboBox.getSelectedItem().toString().equals("System Administration")){
            SystemAdmin admin = sysAdminDir.addSystemAdmin();
            String name =  firtsNameTextFieldRegister.getText()+ " "+lastNameTextFieldRegister.getText();
            admin.setName(name);
            admin.setUsername(usernameTextField1.getText());
            admin.setPassword(String.valueOf(passwordTextField1.getPassword()));
            admin.setMail(mailIDTextField.getText());
            admin.setRole(rolesComboBox.getSelectedItem().toString());
            admin.setDateOfBirth(jDateChooser1.getDate());
            admin.setGender(genderString);
            admin.setPhone(Integer.parseInt(phoneTextField.getText()));
            admin.setUserAddress(userAddress.getText());
            admin.setZipCode(Integer.parseInt(zipCode.getText()));
            admin.setHospitalName(jComboBox1.getSelectedItem().toString());
            admin.setAdminID(patIDGen());            
        }else if(rolesComboBox.getSelectedItem().toString().equals("Hospital Administration")){
            HospitalAdmin hospAdmins = hospAdminDIr.addHospitalAdmin();
            String name =  firtsNameTextFieldRegister.getText()+ " "+lastNameTextFieldRegister.getText();
            hospAdmins.setName(name);
            hospAdmins.setUsername(usernameTextField1.getText());
            hospAdmins.setPassword(String.valueOf(passwordTextField1.getPassword()));
            hospAdmins.setMail(mailIDTextField.getText());
            hospAdmins.setRole(rolesComboBox.getSelectedItem().toString());
            hospAdmins.setDateOfBirth(jDateChooser1.getDate());
            hospAdmins.setGender(genderString);
            hospAdmins.setPhone(Integer.parseInt(phoneTextField.getText()));
            hospAdmins.setUserAddress(userAddress.getText());
            hospAdmins.setZipCode(Integer.parseInt(zipCode.getText()));
            hospAdmins.setHospitalName(jComboBox1.getSelectedItem().toString());
            hospAdmins.setHospitalAdminID(hospAdminIDGen());
        }
    }
    
    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        /*if (ValidationDoctor() == null || ValidationPerson() == null || ValidationSysAdmin() == null){
        registerationProcess();
        PanelPaint(Login);
        }else{
         JOptionPane.showMessageDialog(this, "Sorry but the given username is already taken.");
        }*/
        registerationProcess();
        PanelPaint(Login);        
    }//GEN-LAST:event_registerActionPerformed

    private void maleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleButtonActionPerformed

            genderString = "Male";
    }//GEN-LAST:event_maleButtonActionPerformed

    private void femaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleButtonActionPerformed

            genderString = "Female";
    }//GEN-LAST:event_femaleButtonActionPerformed

    private void othersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_othersButtonActionPerformed

            genderString = "Others";
    }//GEN-LAST:event_othersButtonActionPerformed

    private void phoneTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTextFieldActionPerformed
        
    }//GEN-LAST:event_phoneTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Patient data = ValidationPerson();
        DoctorPerson dataDoc = ValidationDoctor();
        SystemAdmin sysAdmin = ValidationSysAdmin();
        HospitalAdmin homie = ValidationHospAdmin();
        if (data != null || dataDoc != null || sysAdmin != null || homie != null){
            if (data.getRole() == "Patient"){
                leftWelcome.setText("Welcome: "+ data.getUsername());
                leftAccID.setText("Acc. ID: "+data.getUniqueID());
                PanelPaint(Workspace);
                SplitPanelPaint(PatientHome);
                addDoctorsAsPerHospital(data.getHospitalName());
                
            }else if(dataDoc.getRole() == "Doctor"){
                leftWelcome.setText("Welcome: Dr."+ dataDoc.getUsername());
                leftAccID.setText("Acc. ID: "+dataDoc.getMdeicalLicenseNumber());
                PanelPaint(Workspace);
                SplitPanelPaint(DoctorHome);
                doctorAppointmentsList(dataDoc.getUsername());
                
            }else if(sysAdmin.getRole() == "System Administration"){
                leftWelcome.setText("Welcome: "+ sysAdmin.getUsername());
                leftAccID.setText("Acc. ID: "+sysAdmin.getAdminID());
                PanelPaint(Workspace);
                SplitPanelPaint(SystemAdminHome);
            }else if(homie.getRole() == "Hospital Administration"){
                leftWelcome.setText("Welcome: "+homie.getUsername());
                leftAccID.setText("Acc. ID: "+homie.getHospitalAdminID());
                PanelPaint(Workspace);
                SplitPanelPaint(HospitalAdmin);
                hospAdminPatientAndDocList(homie.getHospitalName());
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Invalid username and password.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void hospAdminPatientAndDocList(String hospName){
        DefaultTableModel hosAdminTable = (DefaultTableModel) HospitalAdminTable.getModel();
        hosAdminTable.setRowCount(0);
        for(Patient pat: dir.getDir()){
            if (pat.getHospitalName().toString().equals(hospName)){
           String dataPat[] = {pat.getUniqueID(), pat.getName(), pat.getDateOfBirth().toString(), pat.getMail(), String.valueOf(pat.getPhone()), pat.getAccountStatus(), pat.getRole()};
           hosAdminTable.addRow(dataPat);
            }
        }
        for (DoctorPerson doc: docDir.getDoctorDir()){
            if(doc.getHospitalName().toString().equals(hospName)){
           String dataDoc[] = {doc.getMdeicalLicenseNumber(), doc.getName(), doc.getDateOfBirth().toString(), doc.getMail(), String.valueOf(doc.getPhone()), doc.getAccountStatus(), doc.getRole()};
           hosAdminTable.addRow(dataDoc);
            }
        }
        for (SystemAdmin adm: sysAdminDir.getAdminDirectory()){
            if (adm.getHospitalName().toString().equals(hospName)){
                String dataAdm[] = {adm.getAdminID(), adm.getName(), adm.getDateOfBirth().toString(), adm.getMail(), String.valueOf(adm.getPhone()), adm.getAccountStatus(), adm.getRole()};
                hosAdminTable.addRow(dataAdm);
            }
        }
    }
    
    public void sysAdminPatientList(){
        DefaultTableModel sysAdminPatList = (DefaultTableModel) patientListForSysAdmin.getModel();
        sysAdminPatList.setRowCount(0);
        for (Patient pat: dir.getDir()){
          
            String saPat[] = {pat.getUniqueID(), pat.getUsername(), pat.getGender(), pat.getMail(), String.valueOf(pat.getPhone()), pat.getAccountStatus()};
            sysAdminPatList.addRow(saPat);
        }
    }
    
    public void sysAdminDocList(){
        DefaultTableModel sysAdminDocList = (DefaultTableModel)doctorListForSysAdmin.getModel();
        sysAdminDocList.setRowCount(0);
        for (DoctorPerson dp:docDir.getDoctorDir()){
            String saDoc[] = {dp.getMdeicalLicenseNumber(), dp.getUsername(), dp.getMail(), String.valueOf(dp.getPhone()), dp.getAccountStatus()};
            sysAdminDocList.addRow(saDoc);
        }
    }
    
    public void doctorAppointmentsList(String name){
        DefaultTableModel doctorTable = (DefaultTableModel)DoctorAppointment.getModel();
        doctorTable.setRowCount(0);
        for (Encounter enc : encHistory.getEncounterHistory()){
            if(enc.getEncounterWith().equals(name)){
                String docTableIn[] = {enc.getEncounterID(), enc.getUniqueID(),enc.getUsername(), enc.getEncounterDate(), enc.getAilment()};                
                doctorTable.addRow(docTableIn);
            }
        }
    }
    
    public void patientAppointmentsList(String name){
        DefaultTableModel patientTable = (DefaultTableModel) PatienAppointmentHistory.getModel();
        patientTable.setRowCount(0);
        for (Encounter enc : encHistory.getEncounterHistory()){
            if (enc.getUsername().equals(name)){
                String dataIn[] = {enc.getEncounterWith(), enc.getEncounterDate(), enc.getAilment()};
                patientTable.addRow(dataIn);
            }
        }
    }
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        PanelPaint(Login);
        PatientAppointmentDrList.removeAllItems();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void CancelGrievencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelGrievencesActionPerformed
        PanelPaint(Login);
    }//GEN-LAST:event_CancelGrievencesActionPerformed

    private void createAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAppointmentActionPerformed
        SplitPanelPaint(CreatePatientAppointment);
    }//GEN-LAST:event_createAppointmentActionPerformed

    private void PatientAppointmentCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientAppointmentCancelActionPerformed
        SplitPanelPaint(PatientHome);
    }//GEN-LAST:event_PatientAppointmentCancelActionPerformed

    private void PatientAppointmentSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientAppointmentSubmitActionPerformed
        SplitPanelPaint(PatientHome);
        //Here we will add methods to add data to storage.
        Encounter enc = encHistory.addEncounterHistory();
        enc.setUsername(ValidationPerson().getUsername());
        enc.setGender(ValidationPerson().getGender());
        enc.setHeartRate(0);
        enc.setMail(ValidationPerson().getMail());
        enc.setPhone(ValidationPerson().getPhone());
        enc.setRespirationRate(0);
        enc.setBodyTemperatur(0);
        enc.setBloodPressure(0);
        enc.setHeight(0);
        enc.setRole(ValidationPerson().getRole());
        enc.setAilment(jTextArea2.getText());
        enc.setEncounterDate(PatientAppointmentDateChooser.getDate().toString());
        enc.setEncounterWith(PatientAppointmentDrList.getSelectedItem().toString());
        enc.setEncounterID(encIDGen());
        enc.setUniqueID(ValidationPerson().getUniqueID());
        //DefaultTableModel patientTable = (DefaultTableModel) PatienAppointmentHistory.getModel();
        //String dataIn[] = {enc.getEncounterWith(), enc.getEncounterDate(), enc.getAilment()};
        //patientTable.addRow(dataIn);
        
    }//GEN-LAST:event_PatientAppointmentSubmitActionPerformed

    private void BackToPatientHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToPatientHomeActionPerformed
        SplitPanelPaint(PatientHome);
        ViewAppointmentUsername.setText("Username: ");
        ViewAppointmentWith.setText("Appointment with: ");
        ViewAppointmentDate.setText("Appointment date: ");
        HeartRate.setText("Heart rate: ");
    }//GEN-LAST:event_BackToPatientHomeActionPerformed

    private void viewAppoitnmentPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAppoitnmentPatientActionPerformed
        SplitPanelPaint(ViewPatientAppointment);
        DefaultTableModel patientTable = (DefaultTableModel) PatienAppointmentHistory.getModel();
        patientTable.setRowCount(0);
        for (Encounter enc : encHistory.getEncounterHistory()){
            if (enc.getUsername().equals(ValidationPerson().getUsername())){
                String dataIn[] = {enc.getEncounterID(), enc.getEncounterWith(), enc.getEncounterDate(), enc.getAilment()};
                patientTable.addRow(dataIn);
            }
        }
    }//GEN-LAST:event_viewAppoitnmentPatientActionPerformed

    private void AddVitalSignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddVitalSignsActionPerformed
        SplitPanelPaint(VitalSignsPage);
        //Encounter enc = new Encounter();
        int row = DoctorAppointment.getSelectedRow();
        if (row != -1 ){
            String ID = DoctorAppointment.getValueAt(row, 0).toString();
            for (Encounter e:encHistory.getEncounterHistory()){
                if (e.getEncounterID().equals(ID)){
                    encToWorkWith = e;
                }
            }
            userName.setText(encToWorkWith.getUsername());
            bloodGroupFieldVitalSignsRecording.setText("A+");
            encounterID.setText(encToWorkWith.getEncounterID());
            
            //need to add age as well
            jTextArea4.setText(encToWorkWith.getAilment());
        }
    }//GEN-LAST:event_AddVitalSignsActionPerformed

    private void DoctorHomeBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorHomeBackActionPerformed
        SplitPanelPaint(DoctorHome);
    }//GEN-LAST:event_DoctorHomeBackActionPerformed

    private void PatienAppointmentHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PatienAppointmentHistoryMouseClicked
        int row = PatienAppointmentHistory.getSelectedRow();
        //Need to use Encounter ID to show the right data population.
        String id = PatienAppointmentHistory.getValueAt(row, 0).toString();
        Encounter enc = encHistory.getEncounterHistory().get(row);
        ViewAppointmentUsername.setText("Username: "+enc.getUsername());
        ViewAppointmentWith.setText("Appointment with: "+enc.getEncounterWith());
        ViewAppointmentDate.setText("Appointment date: "+enc.getEncounterDate());
        HeartRate.setText("Heart rate: "+enc.getHeartRate());
        BloodpressureViewAppointment.setText("Blood Pressure: "+enc.getBloodPressure());
        temperatureViewAppointment.setText("Temperature: "+enc.getBodyTemperatur());
        respirationRateViewAppointment.setText("Respiration Rate: "+enc.getRespirationRate());
        HeightViewAppointment.setText("Height: "+enc.getHeight() + "cm.");
        DiagnosisViewAppointment.setText("Diagnosis: "+enc.getDiagnosis());
        ViewAppointmentAilment.setText("Ailment: "+enc.getAilment()+" "+enc.getRole());
        //ContactInforAppointment.setText("Contact Info: "+enc.getMail() + " "+ enc.getPhone()); //Need to add ability to get the right phone number and mail ID as well.
        
    }//GEN-LAST:event_PatienAppointmentHistoryMouseClicked

    private void AddVitalSignsToEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddVitalSignsToEncounterActionPerformed
        //int indexedVal = encHistory.getEncounterHistory().indexOf(encounterID.getText());
        //Encounter enc = encHistory.getEncounterHistory().get(indexedVal);
        System.out.println(encToWorkWith.getEncounterID());
        encToWorkWith.setBloodPressure(Integer.parseInt(bloodPressureFieldVitalSignsRecording.getText()));
        encToWorkWith.setHeight(Integer.parseInt(heightFieldVitalSignsRecording1.getText()));
        encToWorkWith.setBloodPressure(Integer.parseInt(bloodPressureFieldVitalSignsRecording.getText()));
        encToWorkWith.setRespirationRate(Integer.parseInt(respirationRateFieldVitalSignsRecording.getText()));
        encToWorkWith.setDiagnosis(jTextArea3.getText());
    }//GEN-LAST:event_AddVitalSignsToEncounterActionPerformed

    private void doctorListForSysAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doctorListForSysAdminMouseClicked

    }//GEN-LAST:event_doctorListForSysAdminMouseClicked

    private void accountDisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountDisableActionPerformed
        int row = doctorListForSysAdmin.getSelectedRow();
        DoctorPerson dpToDisable = new DoctorPerson();
        if (row != -1){
            String ID = doctorListForSysAdmin.getValueAt(row, 0).toString();
            for (DoctorPerson doc : docDir.getDoctorDir()){
                if (doc.getMdeicalLicenseNumber().toString().equals(ID)){
                    dpToDisable = doc;               
                }              
            }
        dpToDisable.setAccountStatus("Disable");
        JOptionPane.showMessageDialog(this, "The doctor account has been disabled.");
        sysAdminDocList();
        PatientAppointmentDrList.removeItem(dpToDisable.getUsername());
        }else{
        JOptionPane.showMessageDialog(this, "Please select a doctor account to disable");
        }
    }//GEN-LAST:event_accountDisableActionPerformed

    private void accountDisablePatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountDisablePatActionPerformed
        int row = patientListForSysAdmin.getSelectedRow();
        Patient patToDisable = new Patient();
        if(row != -1){
            String IDPat = patientListForSysAdmin.getValueAt(row, 0).toString();
            for (Patient pat:dir.getDir()){
                if (pat.getUniqueID().toString().equals(IDPat)){
                    patToDisable = pat;                
                }
            }
        patToDisable.setAccountStatus("Disable");
        sysAdminPatientList();
        JOptionPane.showMessageDialog(this, "The patient account has been disabled.");
        }else{
        JOptionPane.showMessageDialog(this, "Please select a patient account to disable");
        }
    }//GEN-LAST:event_accountDisablePatActionPerformed

    private void addNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewUserActionPerformed
        SplitPanelPaint(RegisterViaSysAdmin);
    }//GEN-LAST:event_addNewUserActionPerformed

    private void accountEnablePatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountEnablePatActionPerformed
        int row = patientListForSysAdmin.getSelectedRow();
        Patient patToDisable = new Patient();
        if(row != -1){
            String IDPat = patientListForSysAdmin.getValueAt(row, 0).toString();
            for (Patient pat:dir.getDir()){
                if (pat.getUniqueID().toString().equals(IDPat)){
                    patToDisable = pat;                
                }
            }
        patToDisable.setAccountStatus("Active");
        sysAdminPatientList();
        JOptionPane.showMessageDialog(this, "The patient account has been enabled.");
        }else{
        JOptionPane.showMessageDialog(this, "Please select a patient account to enable");
        }
        
    }//GEN-LAST:event_accountEnablePatActionPerformed

    private void accountEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountEnableActionPerformed
        int row = doctorListForSysAdmin.getSelectedRow();
        DoctorPerson dpToDisable = new DoctorPerson();
        if (row != -1){
            String ID = doctorListForSysAdmin.getValueAt(row, 0).toString();
            for (DoctorPerson doc : docDir.getDoctorDir()){
                if (doc.getMdeicalLicenseNumber().toString().equals(ID)){
                    dpToDisable = doc;               
                }              
            }
        dpToDisable.setAccountStatus("Active");
        JOptionPane.showMessageDialog(this, "The doctor account has been disabled.");
        sysAdminDocList();
        PatientAppointmentDrList.addItem(dpToDisable.getUsername());
        }else{
        JOptionPane.showMessageDialog(this, "Please select a doctor account to enable");
        }
    }//GEN-LAST:event_accountEnableActionPerformed

    private void SubmitGrievencesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitGrievencesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SubmitGrievencesActionPerformed

    private void registerSysAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerSysAdminActionPerformed
        registerationProcessSysAdmin();
        SplitPanelPaint(SystemAdminHome);
    }//GEN-LAST:event_registerSysAdminActionPerformed

    private void cancelSysAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelSysAdminActionPerformed
        SplitPanelPaint(SystemAdminHome);
    }//GEN-LAST:event_cancelSysAdminActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        genderString = "Male";
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        genderString = "Female";
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        genderString = "Others";
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void firstNameTextFieldSysAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldSysAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldSysAdminActionPerformed

    private void firtsNameTextFieldRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firtsNameTextFieldRegisterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firtsNameTextFieldRegisterActionPerformed

    private void comboBoxSysAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxSysAdminActionPerformed
        if (comboBoxSysAdmin.getSelectedIndex() == 1){
            mlnTextFieldSysAdmin.setEnabled(true);
        }else{
            mlnTextFieldSysAdmin.setEnabled(false);
        }
    }//GEN-LAST:event_comboBoxSysAdminActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        PanelPaint(addHospital);        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        Hospital hosp = hospDir.addNewHospital();
        hosp.setHospitalName(jTextField1.getText());
        hosp.setHospitalAddress(jTextArea5.getText());
        hosp.setHospitalZipCode(Integer.parseInt(jTextField2.getText()));
        hosp.setHospitalNumber(Integer.parseInt(jTextField3.getText()));
        jComboBox1.addItem(jTextField1.getText());
        jComboBox2.addItem(jTextField1.getText());
        PanelPaint(Login);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        PanelPaint(Login);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void deleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllActionPerformed
        int row = HospitalAdminTable.getSelectedRow();
        HospitalAdmin admin = ValidationHospAdmin();
        int index = 0;
        if (row != -1){
            String ID = HospitalAdminTable.getValueAt(row, 0).toString();
            String role = HospitalAdminTable.getValueAt(row, 6).toString();

            if (role.equals("Patient")){

                for(Patient pat: dir.getDir()){
                    if (pat.getUniqueID().toString().equals(ID)){
                        index = dir.getDir().indexOf(pat);
                        System.out.println(index);
                    }
                }
                dir.getDir().remove(index);
            }
            if (role.equals("Doctor")){
                for (DoctorPerson doc: docDir.getDoctorDir()){
                    if (doc.getMdeicalLicenseNumber().toString().equals(ID)){
                        index = docDir.getDoctorDir().indexOf(doc);
                    }
                }
                docDir.getDoctorDir().remove(index);
            }if (role.equals("System Administration")){
                for(SystemAdmin adm:sysAdminDir.getAdminDirectory()){
                    if (adm.getAdminID().toString().equals(ID)){
                        index = sysAdminDir.getAdminDirectory().indexOf(adm);
                    }
                }
                sysAdminDir.getAdminDirectory().remove(index);
            }doctorAppointmentsList(admin.getHospitalName());
        }else{
            JOptionPane.showMessageDialog(this, "No user selected for deletion.");
        }
    }//GEN-LAST:event_deleteAllActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = PatienAppointmentHistory.getSelectedRow();
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
      
        DefaultTableModel model = (DefaultTableModel)PatienAppointmentHistory.getModel();
        
        if (PatienAppointmentHistory.getSelectedRowCount()==1){
            model.removeRow(PatienAppointmentHistory.getSelectedRow());
            JOptionPane.showMessageDialog(this, "User data deleted.");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblPatientDetails.getSelectedRow();
        int selectedRow2 = tblDoctorDetails.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this, "[WARNING]: No details to be viewed!");
            return;
        }
        
        if(selectedRow2 < 0){
            JOptionPane.showMessageDialog(this, "[WARNING]: No details to be viewed!");
            return;
        }
//        
        model = (DefaultTableModel)tblPatientDetails.getModel();
        Patient selectedPatient = (Patient)model.getValueAt(selectedRow, 0);
        
        DefaultTableModel model2 = (DefaultTableModel)tblDoctorDetails.getModel();
        DoctorPerson selectedDoctor = (DoctorPerson)model.getValueAt(selectedRow2, 0);
        
        tblName1.setText(String.valueOf(selectedPatient.getName()));
        tblEmail1.setText(String.valueOf(selectedPatient.getMail()));
        tblPhone1.setText(String.valueOf(selectedPatient.getPhone()));
        
        tblName2.setText(String.valueOf(selectedDoctor.getName()));
        tblEmail2.setText(String.valueOf(selectedDoctor.getMail()));
        tblPhone2.setText(String.valueOf(selectedDoctor.getPhone()));
    }//GEN-LAST:event_jButton11ActionPerformed

    private void viewUpdateUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewUpdateUsersActionPerformed
        // TODO add your handling code here:
        SplitPanelPaint(ViewUpdateUser);
        populatePatientTable();
        populateDoctorTable();
    }//GEN-LAST:event_viewUpdateUsersActionPerformed

    private void tblPatientDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientDetailsMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblPatientDetails.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this, "[WARNING]: No details to be viewed!");
            return;
        }
        
        
        model = (DefaultTableModel)tblPatientDetails.getModel();
        Patient selectedPatient = (Patient)model.getValueAt(selectedRow, 0);
        
        
        tblName1.setText(String.valueOf(selectedPatient.getName()));
        tblEmail1.setText(String.valueOf(selectedPatient.getMail()));
        tblPhone1.setText(String.valueOf(selectedPatient.getPhone()));
        
    }//GEN-LAST:event_tblPatientDetailsMouseClicked
    
    public HospitalAdmin ValidationHospAdmin(){
    HospitalAdmin hoAdmin = new HospitalAdmin();
    for (HospitalAdmin hospAd: hospAdminDIr.getHosAdmin()){
        if(hospAd.getUsername().equals(usernameTextField.getText()) && hospAd.getPassword().equals(String.valueOf(passwordTextField.getPassword()))){
            hoAdmin = hospAd;        
        }
    }return hoAdmin;
    }
    
    public Patient ValidationPerson(){
        Patient specificP = new Patient();
        for (Patient p: dir.getDir()){
            if (p.getUsername().equals(usernameTextField.getText()) && p.getPassword().equals(String.valueOf(passwordTextField.getPassword()))){
                if (p.getAccountStatus().toString().equals("Active")){
                System.out.println(p.getUsername());
                specificP = p;
                        
                }else{
                    JOptionPane.showMessageDialog(this, "Sorry but your account has been disabled. Please contact the System Admin for corrections.");
                }
            }
        }return specificP;
    }
    
    public DoctorPerson ValidationDoctor(){
        DoctorPerson doc = new DoctorPerson();
        for (DoctorPerson dr: docDir.getDoctorDir()){
            if (dr.getUsername().equals(usernameTextField.getText()) && dr.getPassword().equals(String.valueOf(passwordTextField.getPassword()))){
                if (dr.getAccountStatus().toString().equals("Active")){
                System.out.println(dr.getUsername()+ dr.getRole()+ dr.getAccountStatus());
                doc = dr;
                }else{
                  JOptionPane.showMessageDialog(this, "Sorry but your account has been disabled. Please contact the System Admin for corrections.");
                }
            }
            
    }return doc;
    }
    
    public SystemAdmin ValidationSysAdmin() {
        SystemAdmin sysAD = new SystemAdmin();
        for (SystemAdmin adm: sysAdminDir.getAdminDirectory()){
            if(adm.getUsername().equals(usernameTextField.getText()) && adm.getPassword().equals(String.valueOf(passwordTextField.getPassword()))){
                if(adm.getAccountStatus().toString().equals("Active")){
                sysAD = adm;
                }else{
                    JOptionPane.showMessageDialog(this, "Sorry but your account has been disabled. Please contact the System Admin for corrections.");
                }
            }
        }return sysAD;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hospitalManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hospitalManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hospitalManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hospitalManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hospitalManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddVitalSigns;
    private javax.swing.JButton AddVitalSignsToEncounter;
    private javax.swing.JButton BackToPatientHome;
    private javax.swing.JLabel BloodpressureViewAppointment;
    private javax.swing.JButton CancelGrievences;
    private javax.swing.JButton ClearVitalSigns;
    private javax.swing.JPanel CreatePatientAppointment;
    private javax.swing.JLabel DOB;
    private javax.swing.JLabel DiagnosisViewAppointment;
    private javax.swing.JTable DoctorAppointment;
    private javax.swing.JPanel DoctorHome;
    private javax.swing.JButton DoctorHomeBack;
    private javax.swing.JPanel Grievences;
    private javax.swing.JLabel HeartRate;
    private javax.swing.JLabel HeightViewAppointment;
    private javax.swing.JPanel HospitalAdmin;
    private javax.swing.JTable HospitalAdminTable;
    private javax.swing.JPanel Login;
    private javax.swing.JLabel MailIDGrievencesLabel;
    private javax.swing.JTextField NumberGrievences;
    private javax.swing.JLabel NumberGrievencesLabel;
    private javax.swing.JPanel Parent;
    private javax.swing.JTable PatienAppointmentHistory;
    private javax.swing.JButton PatientAppointmentCancel;
    private javax.swing.JLabel PatientAppointmentDate;
    private com.toedter.calendar.JDateChooser PatientAppointmentDateChooser;
    private javax.swing.JLabel PatientAppointmentDoctor;
    private javax.swing.JComboBox<String> PatientAppointmentDrList;
    private javax.swing.JLabel PatientAppointmentReason;
    private javax.swing.JScrollPane PatientAppointmentReasonArea;
    private javax.swing.JButton PatientAppointmentSubmit;
    private javax.swing.JPanel PatientHome;
    private javax.swing.JPanel Register;
    private javax.swing.JPanel RegisterViaSysAdmin;
    private javax.swing.JPanel RightComponent;
    private javax.swing.JButton SubmitGrievences;
    private javax.swing.JPanel SystemAdminHome;
    private javax.swing.JLabel SystemAdminHomeTitle;
    private javax.swing.JLabel ViewAppointmentAilment;
    private javax.swing.JLabel ViewAppointmentDate;
    private javax.swing.JLabel ViewAppointmentUsername;
    private javax.swing.JLabel ViewAppointmentWith;
    private javax.swing.JPanel ViewPatientAppointment;
    private javax.swing.JPanel ViewUpdateUser;
    private javax.swing.JPanel VitalSignsPage;
    private javax.swing.JPanel Workspace;
    private javax.swing.JButton accountDisable;
    private javax.swing.JButton accountDisablePat;
    private javax.swing.JButton accountEnable;
    private javax.swing.JButton accountEnablePat;
    private javax.swing.JPanel addHospital;
    private javax.swing.JButton addNewUser;
    private javax.swing.JLabel ailmentVitalSignsRecording2;
    private javax.swing.JTextField bloodGroupFieldVitalSignsRecording;
    private javax.swing.JLabel bloodGroupIDVitalSignsRecording;
    private javax.swing.JTextField bloodPressureFieldVitalSignsRecording;
    private javax.swing.JLabel bloodPressureIDVitalSignsRecording;
    private javax.swing.JButton cancelSysAdmin;
    private javax.swing.JComboBox<String> comboBoxSysAdmin;
    private javax.swing.JButton createAppointment;
    private com.toedter.calendar.JDateChooser dateChooserSysAdmin;
    private javax.swing.JButton deleteAll;
    private javax.swing.JLabel diagnosisVitalSignsRecording1;
    private javax.swing.JLabel dobSysAdmin;
    private javax.swing.JTable doctorListForSysAdmin;
    private javax.swing.JLabel emailID;
    private javax.swing.JTextField encounterID;
    private javax.swing.JLabel encounterIDVitalSignsRecording;
    private javax.swing.JRadioButton femaleButton;
    private javax.swing.JTextField firstNameTextFieldSysAdmin;
    private javax.swing.JTextField firtsNameTextFieldRegister;
    private javax.swing.JLabel gender;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderSysAdmin;
    private javax.swing.JComboBox<String> grievencesComboBox;
    private javax.swing.JLabel grievencesSysAdmin;
    private javax.swing.JTextField heightFieldVitalSignsRecording1;
    private javax.swing.JLabel heightVitalSignsRecording1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField lastNameTextFieldRegister;
    private javax.swing.JTextField lastNameTextFieldSysAdmin;
    private javax.swing.JLabel lbLogo;
    private javax.swing.JLabel leftAccID;
    private javax.swing.JLabel leftWelcome;
    private javax.swing.JTextField mailIDGrievences;
    private javax.swing.JLabel mailIDSysAdmin;
    private javax.swing.JTextField mailIDTextField;
    private javax.swing.JTextField mailTextFieldSysAdmin;
    private javax.swing.JRadioButton maleButton;
    private javax.swing.JLabel medicalLicense;
    private javax.swing.JTextField medicalLicenseNumberTextField;
    private javax.swing.JLabel mlnSysAdmin;
    private javax.swing.JTextField mlnTextFieldSysAdmin;
    private javax.swing.JTextField numberTextFieldSysAdmin;
    private javax.swing.JRadioButton othersButton;
    private javax.swing.JLabel password;
    private javax.swing.JLabel password1;
    private javax.swing.JPasswordField passwordFieldSysAdmin;
    private javax.swing.JLabel passwordSysAdmin;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JPasswordField passwordTextField1;
    private javax.swing.JTextField patientAgeFieldVitalSignsRecording;
    private javax.swing.JLabel patientAgeVitalSignsRecording;
    private javax.swing.JTable patientListForSysAdmin;
    private javax.swing.JLabel phone;
    private javax.swing.JLabel phoneSysAdmin;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton register;
    private javax.swing.JButton registerSysAdmin;
    private javax.swing.JTextField respirationRateFieldVitalSignsRecording;
    private javax.swing.JLabel respirationRateIDVitalSignsRecording4;
    private javax.swing.JLabel respirationRateViewAppointment;
    private javax.swing.JLabel role;
    private javax.swing.JLabel roleSysAdmin;
    private javax.swing.JComboBox<String> rolesComboBox;
    private javax.swing.JTable tblDoctorDetails;
    private javax.swing.JTextField tblEmail1;
    private javax.swing.JTextField tblEmail2;
    private javax.swing.JTextField tblName1;
    private javax.swing.JTextField tblName2;
    private javax.swing.JTable tblPatientDetails;
    private javax.swing.JTextField tblPhone1;
    private javax.swing.JTextField tblPhone2;
    private javax.swing.JTextField temperatureFieldVitalSignsRecording4;
    private javax.swing.JLabel temperatureViewAppointment;
    private javax.swing.JLabel temperatureVitalSignsRecording3;
    private javax.swing.JTextField unameTextSysAdmin;
    private javax.swing.JTextArea userAddress;
    private javax.swing.JTextField userName;
    private javax.swing.JLabel userNameSysAdmin;
    private javax.swing.JLabel username;
    private javax.swing.JLabel username1;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JTextField usernameTextField1;
    private javax.swing.JLabel usernameVitalSignsRecording;
    private javax.swing.JButton viewAppoitnmentPatient;
    private javax.swing.JButton viewUpdateUsers;
    private javax.swing.JTextField zipCode;
    // End of variables declaration//GEN-END:variables


}
